definitions:
  models.Poll:
    properties:
      options:
        items:
          type: string
        type: array
      title:
        type: string
    type: object
  models.UserInDB:
    properties:
      hashed_password:
        type: string
      username:
        type: string
    type: object
  models.Vote:
    properties:
      option:
        type: integer
      poll_id:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
paths:
  /login:
    post:
      parameters:
      - description: Username and hashed password
        in: body
        name: userInDB
        required: true
        schema:
          $ref: '#/definitions/models.UserInDB'
      responses:
        "200":
          description: access_token
          schema:
            type: string
        "400":
          description: Invalid request body
          schema:
            type: string
  /poll:
    post:
      parameters:
      - in: header
        name: access_token
        type: string
      - in: header
        name: token_type
        type: string
      - description: Poll object
        in: body
        name: poll
        required: true
        schema:
          $ref: '#/definitions/models.Poll'
      responses:
        "200":
          description: Poll created successfully
          schema:
            type: string
        "400":
          description: Invalid request payload
          schema:
            type: string
  /poll/{id}:
    get:
      parameters:
      - description: Poll ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: PollWithVotes object
          schema:
            type: string
        "404":
          description: Poll not found
          schema:
            type: string
  /poll/{id}/vote:
    post:
      parameters:
      - in: header
        name: access_token
        type: string
      - in: header
        name: token_type
        type: string
      - description: Vote object
        in: body
        name: vote
        required: true
        schema:
          $ref: '#/definitions/models.Vote'
      responses:
        "200":
          description: Voted successfully
          schema:
            type: string
        "400":
          description: Invalid request payload
          schema:
            type: string
  /polls:
    get:
      responses:
        "200":
          description: Polls object
          schema:
            type: string
        "404":
          description: Polls not found
          schema:
            type: string
  /polls/{id}:
    delete:
      parameters:
      - in: header
        name: access_token
        type: string
      - in: header
        name: token_type
        type: string
      - description: Poll ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: Poll deleted successfully
          schema:
            type: string
        "404":
          description: Poll not found
          schema:
            type: string
  /users:
    post:
      consumes:
      - application/json
      description: Add a new user to the database
      parameters:
      - description: Username and hashed password
        in: body
        name: userInDB
        required: true
        schema:
          $ref: '#/definitions/models.UserInDB'
      produces:
      - application/json
      responses:
        "200":
          description: User added successfully
          schema:
            type: string
        "400":
          description: Invalid request payload
          schema:
            type: string
      summary: Add a new user
  /users/:name:
    get:
      parameters:
      - description: name
        in: query
        name: name
        required: true
        type: string
      responses: {}
swagger: "2.0"
